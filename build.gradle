plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
    id 'com.google.protobuf' version '0.9.4'
}

group = 'com.patient.management'
version = '0.0.1-SNAPSHOT'
description = 'Analytics Service'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.kafka:spring-kafka'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
    // GRPC dependencies
    implementation 'io.grpc:grpc-netty-shaded:1.69.0'
    implementation 'io.grpc:grpc-protobuf:1.69.0'
    implementation 'io.grpc:grpc-stub:1.69.0'
    implementation 'com.google.protobuf:protobuf-java:4.29.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.25.5"
    }

    // gRPC codegen plugin (aligning with your runtime gRPC libs)
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.69.0"
        }
    }

    // Apply the gRPC plugin to all proto generation tasks
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc {}
            }
        }
    }
}